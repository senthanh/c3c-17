"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var src_1 = require("../src");
test('Get rss json from note', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://note.mu/recommend/rss')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 10000);
test('Get rss json from bbc news', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://feeds.bbci.co.uk/news/rss.xml#')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from gigazine', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://gigazine.net/news/rss_2.0/')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from yahoo news', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://news.yahoo.co.jp/pickup/rss.xml')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from horiemon.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://horiemon.com/feed/')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from hnrss.org', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://hnrss.org/frontpage')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from hnrss.org newest', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://hnrss.org/newest')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from lifehacker.jp', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://feeds.lifehacker.jp/rss/lifehacker/index.xml')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from huffingtonpost.jp', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://www.huffingtonpost.jp/rss/index.xml')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from nifty.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://portal.nifty.com/rss/headline.rdf')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from digiday.jp', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://digiday.jp/feed/')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from livedoor.jp', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://blog.livedoor.jp/dqnplus/index.rdf')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from billmaher.hbo.libsynpro.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('http://billmaher.hbo.libsynpro.com/rss')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from rss.nytimes.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from www.reddit.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://www.reddit.com/.rss')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from www.npr.org', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://www.npr.org/rss/podcast.php?id=510298')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from prtimes.jp', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://prtimes.jp/companyrdf.php?company_id=25503')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from rss.app', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://rss.app/feeds/X7PeqO5n1HbWTv0O.xml')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from www.nttdata-strategy.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://www.nttdata-strategy.com/keieiken.xml')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from jp.techcrunch.com', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://jp.techcrunch.com/feed/')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
test('Get rss json from note.mu only 1 item', function () { return __awaiter(_this, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, src_1.toJson('https://note.mu/cookpad/rss')];
            case 1:
                data = _a.sent();
                expect(data.hasOwnProperty('items') !== -1).toBeTruthy();
                expect(data.hasOwnProperty('title') !== -1).toBeTruthy();
                return [2 /*return*/];
        }
    });
}); }, 100000);
